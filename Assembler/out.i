MOVI 0 R998
MOVI 0 R999

MOVI 37372 R001
MOVI 0 R000
MOVI 100 R111
STI R001 R000
//STI 10 100
//LDI R111 100
PRTS "TEST: "
PRTI R111
PRTS "\n"
PRTS "w = "
PRTI R001
PRTS "\n"
ADD R998 1 R998
PRTS "SP = "
PRTI R998
PRTS "\n"

MOVI 0 R003
LDI R004 R003
MOVI 12222 R005
ADD R004 R005 R006
MOVI 1 R002
STI R006 R002
ADD R998 1 R998
PRTS "x = "
PRTI R004
PRTS " + "
PRTI R005
PRTS " = "
PRTI R006
PRTS "\n"
PRTS "SP = "
PRTI R998
PRTS "\n"

PRTS "y"
PRTS "\n"
MOVI 1 R008
LDI R009 R008
MOVI 2 R007
STI R009 R007
ADD R998 1 R998

PRTS "z"
PRTS "\n"
MOVI 0 R011
LDI R012 R011
MOVI 1 R013
LDI R014 R013
ADD R012 R014 R015
MOVIF R015 F000
MOVF 2.753 F001
FSUB F000 F001 F002
MOVI 3 R010
STF F002 R010
ADD R998 1 R998

PRTS "aaa"
PRTS "\n"
MOVF 2.45 F003
MOVI 1 R017
LDI R018 R017
MOVI 2 R019
LDI R020 R019
XOR R018 R020 R021
XOR R021 4294967295 R022
MOVI 0 R023
LDI R024 R023
MOVI 1 R025
LDI R026 R025
OR R024 R026 R027
XOR R027 4294967295 R028
AND R022 R028 R029
MOVIF R029 F004
FADD F003 F004 F005
MOVI 4 R016
STF F005 R016
ADD R998 1 R998
PRTS "cond"
PRTS "\n"
JMP bool_start__1

bool_start__1:JMP bool_start__0

bool_start__0:JMP bool_false__0

bool_true__0:MOVI 5 R030
STI 1 R030
JMP bool_end__0

bool_false__0:MOVI 5 R030
STI 0 R030

bool_end__0:JMP parse_start__0

max:PRTS "Function entry\n"
ADD R999 0 R000
LDI R001 R000
PRTS "a: "
PRTI R001
PRTS "\n"
ADD R999 1 R002
LDI R003 R002
PRTS "b: "
PRTI R001
PRTS "\n"
JMPC GT R001 R003 bool_true__1

JMP bool_false__1

bool_true__1:ADD R999 0 R004
LDI R005 R004
ADD R999 3 R006
STI R005 R006
ADD R999 2 R006
LDI R007 R006
JMPI R007

JMP if_end__0

bool_false__1:ADD R999 1 R008
LDI R009 R008
ADD R999 3 R010
STI R009 R010
ADD R999 2 R010
LDI R011 R010
JMPI R011

if_end__0:ADD R999 1 R012
LDI R013 R012
ADD R999 3 R014
STI R013 R014
ADD R999 2 R014
LDI R015 R014
JMPI R015

ADD R999 2 R016
LDI R017 R016
JMPI R017

parse_start__0:IN R034
PRTS "\n\nRule Input: "
PRTI R034
PRTS "\n"
JMPC GT 0 R034 end_program__0

MOVI 97 R035
JMPC EQ R035 R034 rule_start__0

parse_return__0:JMP parse_start__0

rule_start__0:PRTS "num value: "
INI R000
PRTI R000
PRTS "\n"
ADD 0 R999 R001
STI R000 R001
ADD R998 1 R998
MOVI 3 R002
PRTS "Load value: "
PRTI R002
PRTS "\n"
ADD R998 1 R998
STI R002 R998
PRTS "Store value: "
PRTI R002
PRTS " , At position: "
PRTI R998
PRTS "\n"
MOVI 1 R004
LDI R005 R004
ADD R998 0 R003
STI R005 R003
PRTS "Parameter 1 val: "
PRTI R005
PRTS " , at address: "
PRTI R003
PRTS "\n"
ADD R999 0 R006
LDI R007 R006
ADD R998 1 R003
STI R007 R003
PRTS "Parameter 2 val: "
PRTI R005
PRTS " , at address: "
PRTI R003
PRTS "\n"
ADD R998 2 R003
MOVL func_call__0 R008
STI R008 R003
PRTS "Store return label at: "
PRTI R003
PRTS "\n"
PRTS "Base Pointer: "
PRTI R999
PRTS " , Stack Pointer: "
PRTI R998
PRTS "\n"
ADD R998 4 R003
STI R999 R003
MOVI R998 R999
MOVI R003 R998
PRTS "Base Pointer: "
PRTI R999
PRTS " , Stack Pointer: "
PRTI R998
PRTS "\n"
JMP max

func_call__0: PRTS "FUNCTION RETURN\n"
ADD R999 3 R003
LDI R009 R003
MOVI R999 R998
ADD R998 4 R003
LDI R999 R003
LDI R002 R998
SUB R998 1 R998
ADD R002 R009 R010
MOVI 10 R011
ADD R010 R011 R012
MOVI 1 R013
STI R012 R013
PRTS "Rule end\n\n\n"
JMP parse_return__0

end_program__0:PRTS "PROGRAM END\n"
